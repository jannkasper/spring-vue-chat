{
  "info": {
    "name": "Chat App Auth API Tests",
    "description": "Collection for testing authentication endpoints for the Spring Vue Chat application",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Auth",
      "description": "Authentication related endpoints",
      "item": [
        {
          "name": "Register User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"username\": \"testuser\",\n    \"email\": \"test@example.com\",\n    \"password\": \"password123\",\n    \"firstName\": \"Test\",\n    \"lastName\": \"User\"\n}"
            },
            "url": {
              "raw": "http://localhost:8080/api/auth/signup",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "8080",
              "path": [
                "api",
                "auth",
                "signup"
              ]
            },
            "description": "Register a new user"
          },
          "response": []
        },
        {
          "name": "Login User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"username\": \"testuser\",\n    \"password\": \"password123\"\n}"
            },
            "url": {
              "raw": "http://localhost:8080/api/auth/signin",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "8080",
              "path": [
                "api",
                "auth",
                "signin"
              ]
            },
            "description": "Login with user credentials to get JWT token"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Protected Resources",
      "description": "Endpoints requiring authentication",
      "item": [
        {
          "name": "Access User Content",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{auth_token}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "http://localhost:8080/api/test/user",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "8080",
              "path": [
                "api",
                "test",
                "user"
              ]
            },
            "description": "Access protected user content"
          },
          "response": []
        },
        {
          "name": "Access Public Content",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "http://localhost:8080/api/test/all",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "8080",
              "path": [
                "api",
                "test",
                "all"
              ]
            },
            "description": "Access public content (no auth required)"
          },
          "response": []
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          "if (pm.response.code === 200 && pm.response.json().token) {",
          "    pm.environment.set(\"auth_token\", pm.response.json().token);",
          "    console.log(\"Token saved to environment variables\");",
          "}"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:8080",
      "type": "string"
    }
  ]
} 